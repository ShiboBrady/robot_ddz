// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace YLYQ {
namespace Protocol {
namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Head;
class Message;

enum ErrorCode {
  SUCCESS = 0,
  ERR_PROTOCOL = 1,
  ERR_SERVER = 2,
  ERR_STORAGE = 3,
  ERR_INVALID_USER = 101,
  ERR_NO_TABLE = 102,
  ERR_INVALID_TABLE = 103,
  ERR_INVALID_SEATNO = 104,
  ERR_CHIPS_NOT_ENOUGH = 105,
  ERR_INVALID_BET = 106,
  ERR_USER_STATE = 107,
  ERR_SLOT_SERVER = 108
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = SUCCESS;
const ErrorCode ErrorCode_MAX = ERR_SLOT_SERVER;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================

class Head : public ::google::protobuf::Message {
 public:
  Head();
  virtual ~Head();

  Head(const Head& from);

  inline Head& operator=(const Head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Head& default_instance();

  void Swap(Head* other);

  // implements Message ----------------------------------------------

  inline Head* New() const { return New(NULL); }

  Head* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Head& from);
  void MergeFrom(const Head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Head* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // required int32 sequence = 2;
  bool has_sequence() const;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // required int32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.message.Head)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 sequence_;
  ::google::protobuf::int32 timestamp_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Head* default_instance_;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YLYQ.Protocol.message.Head head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::YLYQ::Protocol::message::Head& head() const;
  ::YLYQ::Protocol::message::Head* mutable_head();
  ::YLYQ::Protocol::message::Head* release_head();
  void set_allocated_head(::YLYQ::Protocol::message::Head* head);

  // optional bytes body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.message.Message)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YLYQ::Protocol::message::Head* head_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Head

// required int32 version = 1;
inline bool Head::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Head::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Head::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Head::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 Head::version() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.message.Head.version)
  return version_;
}
inline void Head::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.message.Head.version)
}

// required int32 sequence = 2;
inline bool Head::has_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Head::set_has_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Head::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Head::clear_sequence() {
  sequence_ = 0;
  clear_has_sequence();
}
inline ::google::protobuf::int32 Head::sequence() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.message.Head.sequence)
  return sequence_;
}
inline void Head::set_sequence(::google::protobuf::int32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.message.Head.sequence)
}

// required int32 timestamp = 3;
inline bool Head::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Head::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Head::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Head::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 Head::timestamp() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.message.Head.timestamp)
  return timestamp_;
}
inline void Head::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.message.Head.timestamp)
}

// -------------------------------------------------------------------

// Message

// required .YLYQ.Protocol.message.Head head = 1;
inline bool Message::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_head() {
  if (head_ != NULL) head_->::YLYQ::Protocol::message::Head::Clear();
  clear_has_head();
}
inline const ::YLYQ::Protocol::message::Head& Message::head() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.message.Message.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::YLYQ::Protocol::message::Head* Message::mutable_head() {
  set_has_head();
  if (head_ == NULL) {
    head_ = new ::YLYQ::Protocol::message::Head;
  }
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.message.Message.head)
  return head_;
}
inline ::YLYQ::Protocol::message::Head* Message::release_head() {
  clear_has_head();
  ::YLYQ::Protocol::message::Head* temp = head_;
  head_ = NULL;
  return temp;
}
inline void Message::set_allocated_head(::YLYQ::Protocol::message::Head* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.message.Message.head)
}

// optional bytes body = 2;
inline bool Message::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& Message::body() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.message.Message.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.message.Message.body)
}
inline void Message::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.message.Message.body)
}
inline void Message::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.message.Message.body)
}
inline ::std::string* Message::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.message.Message.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.message.Message.body)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace Protocol
}  // namespace YLYQ

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::YLYQ::Protocol::message::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::YLYQ::Protocol::message::ErrorCode>() {
  return ::YLYQ::Protocol::message::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
