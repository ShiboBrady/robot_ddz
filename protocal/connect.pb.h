// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connect.proto

#ifndef PROTOBUF_connect_2eproto__INCLUDED
#define PROTOBUF_connect_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace YLYQ {
namespace Protocol {
namespace connect {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_connect_2eproto();
void protobuf_AssignDesc_connect_2eproto();
void protobuf_ShutdownFile_connect_2eproto();

class DestroyGameAck;
class DestroyGameReq;
class HeartbeatNtf;
class InitGameAck;
class InitGameReq;
class VerifyAck;
class VerifyReq;

enum ConnectMsgId {
  MSGID_NULL = 0,
  MSGID_HEARTBEAT_NTF = 10,
  MSGID_VERIFY_REQ = 11,
  MSGID_VERIFY_ACK = 12,
  MSGID_INIT_GAME_REQ = 13,
  MSGID_INIT_GAME_ACK = 14,
  MSGID_DESTROY_GAME_REQ = 15,
  MSGID_DESTROY_GAME_ACK = 16
};
bool ConnectMsgId_IsValid(int value);
const ConnectMsgId ConnectMsgId_MIN = MSGID_NULL;
const ConnectMsgId ConnectMsgId_MAX = MSGID_DESTROY_GAME_ACK;
const int ConnectMsgId_ARRAYSIZE = ConnectMsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConnectMsgId_descriptor();
inline const ::std::string& ConnectMsgId_Name(ConnectMsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConnectMsgId_descriptor(), value);
}
inline bool ConnectMsgId_Parse(
    const ::std::string& name, ConnectMsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectMsgId>(
    ConnectMsgId_descriptor(), name, value);
}
// ===================================================================

class HeartbeatNtf : public ::google::protobuf::Message {
 public:
  HeartbeatNtf();
  virtual ~HeartbeatNtf();

  HeartbeatNtf(const HeartbeatNtf& from);

  inline HeartbeatNtf& operator=(const HeartbeatNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatNtf& default_instance();

  void Swap(HeartbeatNtf* other);

  // implements Message ----------------------------------------------

  inline HeartbeatNtf* New() const { return New(NULL); }

  HeartbeatNtf* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatNtf& from);
  void MergeFrom(const HeartbeatNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string rev = 1;
  bool has_rev() const;
  void clear_rev();
  static const int kRevFieldNumber = 1;
  const ::std::string& rev() const;
  void set_rev(const ::std::string& value);
  void set_rev(const char* value);
  void set_rev(const char* value, size_t size);
  ::std::string* mutable_rev();
  ::std::string* release_rev();
  void set_allocated_rev(::std::string* rev);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.HeartbeatNtf)
 private:
  inline void set_has_rev();
  inline void clear_has_rev();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr rev_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatNtf* default_instance_;
};
// -------------------------------------------------------------------

class VerifyReq : public ::google::protobuf::Message {
 public:
  VerifyReq();
  virtual ~VerifyReq();

  VerifyReq(const VerifyReq& from);

  inline VerifyReq& operator=(const VerifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyReq& default_instance();

  void Swap(VerifyReq* other);

  // implements Message ----------------------------------------------

  inline VerifyReq* New() const { return New(NULL); }

  VerifyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VerifyReq& from);
  void MergeFrom(const VerifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VerifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // required string sessionKey = 2;
  bool has_sessionkey() const;
  void clear_sessionkey();
  static const int kSessionKeyFieldNumber = 2;
  const ::std::string& sessionkey() const;
  void set_sessionkey(const ::std::string& value);
  void set_sessionkey(const char* value);
  void set_sessionkey(const char* value, size_t size);
  ::std::string* mutable_sessionkey();
  ::std::string* release_sessionkey();
  void set_allocated_sessionkey(::std::string* sessionkey);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.VerifyReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_sessionkey();
  inline void clear_has_sessionkey();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr sessionkey_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static VerifyReq* default_instance_;
};
// -------------------------------------------------------------------

class VerifyAck : public ::google::protobuf::Message {
 public:
  VerifyAck();
  virtual ~VerifyAck();

  VerifyAck(const VerifyAck& from);

  inline VerifyAck& operator=(const VerifyAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyAck& default_instance();

  void Swap(VerifyAck* other);

  // implements Message ----------------------------------------------

  inline VerifyAck* New() const { return New(NULL); }

  VerifyAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VerifyAck& from);
  void MergeFrom(const VerifyAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VerifyAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string gameName = 2;
  bool has_gamename() const;
  void clear_gamename();
  static const int kGameNameFieldNumber = 2;
  const ::std::string& gamename() const;
  void set_gamename(const ::std::string& value);
  void set_gamename(const char* value);
  void set_gamename(const char* value, size_t size);
  ::std::string* mutable_gamename();
  ::std::string* release_gamename();
  void set_allocated_gamename(::std::string* gamename);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.VerifyAck)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gamename();
  inline void clear_has_gamename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gamename_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static VerifyAck* default_instance_;
};
// -------------------------------------------------------------------

class InitGameReq : public ::google::protobuf::Message {
 public:
  InitGameReq();
  virtual ~InitGameReq();

  InitGameReq(const InitGameReq& from);

  inline InitGameReq& operator=(const InitGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitGameReq& default_instance();

  void Swap(InitGameReq* other);

  // implements Message ----------------------------------------------

  inline InitGameReq* New() const { return New(NULL); }

  InitGameReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitGameReq& from);
  void MergeFrom(const InitGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.InitGameReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static InitGameReq* default_instance_;
};
// -------------------------------------------------------------------

class InitGameAck : public ::google::protobuf::Message {
 public:
  InitGameAck();
  virtual ~InitGameAck();

  InitGameAck(const InitGameAck& from);

  inline InitGameAck& operator=(const InitGameAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitGameAck& default_instance();

  void Swap(InitGameAck* other);

  // implements Message ----------------------------------------------

  inline InitGameAck* New() const { return New(NULL); }

  InitGameAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitGameAck& from);
  void MergeFrom(const InitGameAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.InitGameAck)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static InitGameAck* default_instance_;
};
// -------------------------------------------------------------------

class DestroyGameReq : public ::google::protobuf::Message {
 public:
  DestroyGameReq();
  virtual ~DestroyGameReq();

  DestroyGameReq(const DestroyGameReq& from);

  inline DestroyGameReq& operator=(const DestroyGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyGameReq& default_instance();

  void Swap(DestroyGameReq* other);

  // implements Message ----------------------------------------------

  inline DestroyGameReq* New() const { return New(NULL); }

  DestroyGameReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyGameReq& from);
  void MergeFrom(const DestroyGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.DestroyGameReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static DestroyGameReq* default_instance_;
};
// -------------------------------------------------------------------

class DestroyGameAck : public ::google::protobuf::Message {
 public:
  DestroyGameAck();
  virtual ~DestroyGameAck();

  DestroyGameAck(const DestroyGameAck& from);

  inline DestroyGameAck& operator=(const DestroyGameAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyGameAck& default_instance();

  void Swap(DestroyGameAck* other);

  // implements Message ----------------------------------------------

  inline DestroyGameAck* New() const { return New(NULL); }

  DestroyGameAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyGameAck& from);
  void MergeFrom(const DestroyGameAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YLYQ.Protocol.connect.DestroyGameAck)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_connect_2eproto();
  friend void protobuf_AssignDesc_connect_2eproto();
  friend void protobuf_ShutdownFile_connect_2eproto();

  void InitAsDefaultInstance();
  static DestroyGameAck* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatNtf

// optional string rev = 1;
inline bool HeartbeatNtf::has_rev() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatNtf::set_has_rev() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatNtf::clear_has_rev() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatNtf::clear_rev() {
  rev_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rev();
}
inline const ::std::string& HeartbeatNtf::rev() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.HeartbeatNtf.rev)
  return rev_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartbeatNtf::set_rev(const ::std::string& value) {
  set_has_rev();
  rev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.HeartbeatNtf.rev)
}
inline void HeartbeatNtf::set_rev(const char* value) {
  set_has_rev();
  rev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.HeartbeatNtf.rev)
}
inline void HeartbeatNtf::set_rev(const char* value, size_t size) {
  set_has_rev();
  rev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.HeartbeatNtf.rev)
}
inline ::std::string* HeartbeatNtf::mutable_rev() {
  set_has_rev();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.HeartbeatNtf.rev)
  return rev_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartbeatNtf::release_rev() {
  clear_has_rev();
  return rev_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartbeatNtf::set_allocated_rev(::std::string* rev) {
  if (rev != NULL) {
    set_has_rev();
  } else {
    clear_has_rev();
  }
  rev_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rev);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.HeartbeatNtf.rev)
}

// -------------------------------------------------------------------

// VerifyReq

// required string userId = 1;
inline bool VerifyReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
inline const ::std::string& VerifyReq::userid() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.VerifyReq.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyReq::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.VerifyReq.userId)
}
inline void VerifyReq::set_userid(const char* value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.VerifyReq.userId)
}
inline void VerifyReq::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.VerifyReq.userId)
}
inline ::std::string* VerifyReq::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.VerifyReq.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyReq::release_userid() {
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.VerifyReq.userId)
}

// required string sessionKey = 2;
inline bool VerifyReq::has_sessionkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyReq::set_has_sessionkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyReq::clear_has_sessionkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyReq::clear_sessionkey() {
  sessionkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionkey();
}
inline const ::std::string& VerifyReq::sessionkey() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.VerifyReq.sessionKey)
  return sessionkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyReq::set_sessionkey(const ::std::string& value) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.VerifyReq.sessionKey)
}
inline void VerifyReq::set_sessionkey(const char* value) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.VerifyReq.sessionKey)
}
inline void VerifyReq::set_sessionkey(const char* value, size_t size) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.VerifyReq.sessionKey)
}
inline ::std::string* VerifyReq::mutable_sessionkey() {
  set_has_sessionkey();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.VerifyReq.sessionKey)
  return sessionkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyReq::release_sessionkey() {
  clear_has_sessionkey();
  return sessionkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyReq::set_allocated_sessionkey(::std::string* sessionkey) {
  if (sessionkey != NULL) {
    set_has_sessionkey();
  } else {
    clear_has_sessionkey();
  }
  sessionkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionkey);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.VerifyReq.sessionKey)
}

// -------------------------------------------------------------------

// VerifyAck

// required int32 result = 1;
inline bool VerifyAck::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyAck::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyAck::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyAck::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 VerifyAck::result() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.VerifyAck.result)
  return result_;
}
inline void VerifyAck::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.VerifyAck.result)
}

// optional string gameName = 2;
inline bool VerifyAck::has_gamename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyAck::set_has_gamename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyAck::clear_has_gamename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyAck::clear_gamename() {
  gamename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gamename();
}
inline const ::std::string& VerifyAck::gamename() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.VerifyAck.gameName)
  return gamename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAck::set_gamename(const ::std::string& value) {
  set_has_gamename();
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.VerifyAck.gameName)
}
inline void VerifyAck::set_gamename(const char* value) {
  set_has_gamename();
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.VerifyAck.gameName)
}
inline void VerifyAck::set_gamename(const char* value, size_t size) {
  set_has_gamename();
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.VerifyAck.gameName)
}
inline ::std::string* VerifyAck::mutable_gamename() {
  set_has_gamename();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.VerifyAck.gameName)
  return gamename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAck::release_gamename() {
  clear_has_gamename();
  return gamename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAck::set_allocated_gamename(::std::string* gamename) {
  if (gamename != NULL) {
    set_has_gamename();
  } else {
    clear_has_gamename();
  }
  gamename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamename);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.VerifyAck.gameName)
}

// -------------------------------------------------------------------

// InitGameReq

// required string type = 1;
inline bool InitGameReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitGameReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitGameReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitGameReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& InitGameReq::type() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.InitGameReq.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitGameReq::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.InitGameReq.type)
}
inline void InitGameReq::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.InitGameReq.type)
}
inline void InitGameReq::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.InitGameReq.type)
}
inline ::std::string* InitGameReq::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.InitGameReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitGameReq::release_type() {
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitGameReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.InitGameReq.type)
}

// required string name = 2;
inline bool InitGameReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitGameReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitGameReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitGameReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& InitGameReq::name() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.InitGameReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitGameReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.InitGameReq.name)
}
inline void InitGameReq::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.InitGameReq.name)
}
inline void InitGameReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.InitGameReq.name)
}
inline ::std::string* InitGameReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.InitGameReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitGameReq::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitGameReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.InitGameReq.name)
}

// -------------------------------------------------------------------

// InitGameAck

// required int32 result = 1;
inline bool InitGameAck::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitGameAck::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitGameAck::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitGameAck::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 InitGameAck::result() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.InitGameAck.result)
  return result_;
}
inline void InitGameAck::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.InitGameAck.result)
}

// -------------------------------------------------------------------

// DestroyGameReq

// optional string type = 1;
inline bool DestroyGameReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyGameReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyGameReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyGameReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& DestroyGameReq::type() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.DestroyGameReq.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyGameReq::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.DestroyGameReq.type)
}
inline void DestroyGameReq::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.DestroyGameReq.type)
}
inline void DestroyGameReq::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.DestroyGameReq.type)
}
inline ::std::string* DestroyGameReq::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.DestroyGameReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyGameReq::release_type() {
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyGameReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.DestroyGameReq.type)
}

// optional string name = 2;
inline bool DestroyGameReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyGameReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyGameReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyGameReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DestroyGameReq::name() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.DestroyGameReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyGameReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.DestroyGameReq.name)
}
inline void DestroyGameReq::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YLYQ.Protocol.connect.DestroyGameReq.name)
}
inline void DestroyGameReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YLYQ.Protocol.connect.DestroyGameReq.name)
}
inline ::std::string* DestroyGameReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:YLYQ.Protocol.connect.DestroyGameReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyGameReq::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyGameReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:YLYQ.Protocol.connect.DestroyGameReq.name)
}

// -------------------------------------------------------------------

// DestroyGameAck

// required int32 result = 1;
inline bool DestroyGameAck::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyGameAck::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyGameAck::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyGameAck::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DestroyGameAck::result() const {
  // @@protoc_insertion_point(field_get:YLYQ.Protocol.connect.DestroyGameAck.result)
  return result_;
}
inline void DestroyGameAck::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:YLYQ.Protocol.connect.DestroyGameAck.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace connect
}  // namespace Protocol
}  // namespace YLYQ

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::YLYQ::Protocol::connect::ConnectMsgId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::YLYQ::Protocol::connect::ConnectMsgId>() {
  return ::YLYQ::Protocol::connect::ConnectMsgId_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_connect_2eproto__INCLUDED
